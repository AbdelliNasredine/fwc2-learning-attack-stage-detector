# Start from a Python base image instead of PyTorch CUDA
FROM python:3.9-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    python3-pip \
    python3-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install PyTorch CPU version specifically
RUN pip3 install --no-cache-dir \
    torch==2.1.0+cpu \
    torchvision==0.16.0+cpu \
    -f https://download.pytorch.org/whl/cpu/torch_stable.html

# Install other Python packages
RUN pip3 install --no-cache-dir \
    numpy==1.24.3 \
    pandas==2.1.1 \
    scikit-learn==1.3.1 \
    matplotlib==3.8.0 \
    seaborn==0.13.0 \
    tqdm==4.66.1 \
    tensorboard==2.14.1

# Copy the source code
COPY . /app/

# Create directories for data and models
RUN mkdir -p /app/data /app/models /app/logs

# Create a script to start training
RUN echo '#!/bin/bash\n\
    python3 train.py \
    --data_path $DATA_PATH \
    --batch_size $BATCH_SIZE \
    --learning_rate $LEARNING_RATE \
    --epochs $EPOCHS \
    --corruption_ratio $CORRUPTION_RATIO \
    --noise_std $NOISE_STD \
    --device "cpu" \
    --model_save_path $MODEL_SAVE_PATH \
    --log_dir $LOG_DIR\n' > /app/start_training.sh

# Make the script executable
RUN chmod +x /app/start_training.sh

# Default environment variables (adjusted batch size for CPU)
ENV DATA_PATH=/app/data \
    BATCH_SIZE=32 \
    LEARNING_RATE=0.001 \
    EPOCHS=100 \
    CORRUPTION_RATIO=0.1 \
    NOISE_STD=0.1 \
    MODEL_SAVE_PATH="/app/models" \
    LOG_DIR="/app/logs"

# Command to run when the container starts
CMD ["/app/start_training.sh"]